/// <reference types="node" />
import { Readable, Writable } from "stream";
export declare const SampleFormat8Bit = 8;
export declare const SampleFormat16Bit = 16;
export declare const SampleFormat24Bit = 24;
export declare const SampleFormat32Bit = 32;
export declare const getDevices: any;
export interface AudioOptions {
    deviceId?: number;
    sampleRate?: number;
    channelCount?: number;
    sampleFormat?: number;
    debug?: boolean;
}
export declare type AudioCallback = () => void;
export declare class AudioInput extends Readable {
    private audio;
    constructor(options: AudioOptions);
    _read(size?: number): void;
    start(): void;
    abort(): void;
    quit(cb?: AudioCallback): void;
}
export declare class AudioOutput extends Writable {
    private audio;
    constructor(options: AudioOptions);
    write(chunk: any, encoding?: any, cb?: AudioCallback): boolean;
    start(): void;
    abort(): void;
    quit(cb?: AudioCallback): void;
}
